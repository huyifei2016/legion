buildscript {
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
            jcenter()
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
    }

}
plugins {
    id 'java'
    id 'io.qameta.allure' version('2.5')
}



//def sit = "sit"
//def uat = "uat"
//def pre = "pre"


group 'com.lenovo.legion'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {

    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
    }
    mavenCentral()
}

/*task*/
task runTestOnSit(type: Test) {
    String xmlString = findProperty("xml")?:"testng.xml"

    useTestNG {
        suites(file('src/test/resources/' + xmlString))
    }
    /*allure configure*/
    allure {
        version = '2.4.1'
        aspectjweaver = true
        autoconfigure = true
        reportDir = file('build/allure-results')
        downloadLink = 'https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.4.1/allure-2.4.1.zip'
    }

}
task runTestByGroup(type: Test) {
    String xmlString = findProperty("xml")?:"testng.xml"
    String group = findProperty("group")?:"group"
    useTestNG {
        suites(file('src/test/resources/' + xmlString))
        includeGroups group
    }
    /*allure configure*/
    allure {
        version = '2.4.1'
        aspectjweaver = true
        autoconfigure = true
        reportDir = file('build/allure-results')
        downloadLink = 'https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.4.1/allure-2.4.1.zip'
    }
}


dependencies {
    dependencies {
        testCompile group: 'org.testng', name: 'testng', version: '7.0.0'
        testCompile group: 'io.rest-assured', name: 'rest-assured', version: '4.2.0'
        compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.3'
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.68'
        compile group: 'com.alibaba', name: 'easyexcel', version: '2.2.3'
        compile group: 'org.mongodb', name: 'mongodb-driver', version: '3.12.4'
        compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
        compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.11.0'
        compile group: 'log4j', name: 'log4j', version: '1.2.13'
        compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
        // https://mvnrepository.com/artifact/commons-io/commons-io
        compile group: 'commons-io', name: 'commons-io', version: '2.7'
        compile 'com.aventstack:extentreports:3.0.6'
        compile 'com.vimalselvam:testng-extentsreport:1.3.1'
        compile 'org.codehaus.groovy:groovy:3.0.3'
        compile 'org.codehaus.groovy:groovy-all:3.0.3'
    }

}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
test {
    useTestNG {
        suites(file('src/test/resources/testng.xml'))
    }
    /*allure configure*/
    allure {
        version = '2.4.1'
        aspectjweaver = true
        autoconfigure = true
        reportDir = file('build/allure-results')
        downloadLink = 'https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.4.1/allure-2.4.1.zip'
    }

    task printString << {

        println("helle task!!")
    }
}